{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_forms/date-input/date-input.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_directive/has-role.directive.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/lists/lists.component.html","./src/app/lists/lists.component.ts","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_services/presence.service.ts","./src/app/_models/userParams.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_services/paginationHelper.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl = environment.apiUrl;\n  validationErrors: string[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error(){\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response =>{\n      console.log(response);\n    }, error=>{\n      console.log(error);\n    })\n  }\n\n  get400Error(){\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response =>{\n      console.log(response);\n    }, error=>{\n      console.log(error);\n    })\n  }\n\n  get500Error(){\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response =>{\n      console.log(response);\n    }, error=>{\n      console.log(error);\n    })\n  }\n\n  get401Error(){\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response =>{\n      console.log(response);\n    }, error=>{\n      console.log(error);\n    })\n  }\n\n  get400ValidationError(){\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response =>{\n      console.log(response);\n    }, error=>{\n      this.validationErrors = error;\n    })\n  }\n\n}\n","<ng-container >\n    <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button>\n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button>\n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button>\n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">Test 404 Validation Error</button>\n\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0 \">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n</ng-container>","<div class=\"form-group\">\n    <input \n        type=\"text\"\n        [class.is-invalid] = 'ngControl.touched && ngControl.invalid'\n        class=\"form-control\"\n        [formControl]= '$any(ngControl).control' \n        placeholder=\"{{label}}\"\n        bsDatepicker\n        [bsConfig] = '$any(bsConfig)'\n        [maxDate] = '$any(maxDate)'\n    >\n    <div *ngIf=\"ngControl.control?.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\n</div>","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n\n  @Input() label?: string;\n  @Input() maxDate?: Date;\n  //partial: every single property in this type is going to be optional\n  //without partial we have to provide every single possible configuration option that we put inside \n  bsConfig?: Partial<BsDatepickerConfig>;\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n    this.bsConfig={\n      containerClass: 'theme-red', //theme \n      dateInputFormat: 'DD MMMM YYYY',//how we want this display inside datePicker\n    }\n   }\n\n  writeValue(obj: any): void {\n  }\n  registerOnChange(fn: any): void {\n\n  }\n  registerOnTouched(fn: any): void {\n  }\n\n  \n\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @Output() cancelRegister = new EventEmitter();\n\n  registerForm!: FormGroup;\n  maxDate?: Date;\n  validationErrors: string[] = [];\n\n\n  constructor(private accounService: AccountService, private toastr: ToastrService,\n    private fb: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\n    })\n  }\n\n  matchValues(matchTo: string): ValidatorFn {\n    return (control: AbstractControl | string | any) => {\n      return control?.value === control?.parent?.controls[matchTo].value ? null : { isMatching: true }\n    }\n  }\n\n  register() {\n    this.accounService.register(this.registerForm.value).subscribe(response => {\n      this.router.navigateByUrl('/members');\n    }, error => {\n      this.validationErrors = error;\n    })\n  }\n\n  cancle() {\n    this.cancelRegister.emit(false);\n  }\n}\n","<form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid && register()\" autocompleteoff>\n    <h2 class=\"text-center text-primary\">Sign up</h2>\n    <hr>\n\n    <div class=\"form-group\">\n        <label class=\"control-label\" style=\"margin-right: 10px\">I am a:</label>\n        <label class=\"radio-inline\">\n            <input type=\"radio\" value=\"male\" formControlName='gender'> Male\n        </label>\n        <label class=\"radio-inline\">\n            <input type=\"radio\" value=\"female\" formControlName='gender' class=\"ml-3\"> Female\n        </label>\n    </div>\n    \n    <app-text-input [formControl]='$any(registerForm).controls[\"username\"]' \n        [label]='\"Username\"'></app-text-input>\n    <app-text-input [formControl]='$any(registerForm).controls[\"knownAs\"]' \n        [label]='\"Known As\"'></app-text-input>\n    <app-date-input [formControl]='$any(registerForm).controls[\"dateOfBirth\"]' \n        [label]='\"Date of birth\"' [maxDate] = 'maxDate'></app-date-input>\n    <app-text-input [formControl]='$any(registerForm).controls[\"city\"]' \n        [label]='\"City\"'></app-text-input>\n    <app-text-input [formControl]='$any(registerForm).controls[\"country\"]' \n        [label]='\"Country\"'></app-text-input>\n    <app-text-input [formControl]='$any(registerForm).controls[\"password\"]' \n        [label]='\"Password\"' [type]='\"password\"'></app-text-input>\n    <app-text-input [formControl]='$any(registerForm).controls[\"confirmPassword\"]' \n        [label]='\"Confirm Password\"' [type]='\"password\"'></app-text-input>\n\n        <div class=\"row\" *ngIf=\"validationErrors.length > 0 \">\n            <ul class=\"text-danger\">\n                <li *ngFor=\"let error of validationErrors\">\n                    {{error}}\n                </li>\n            </ul>\n        </div>\n\n    <div class=\"form-group text-center\">\n        <button [disabled]='!registerForm.valid' class=\"btn btn-success mr-2\" type=\"submit\">Register</button>\n        <button class=\"btn btn-default mr-2\" type=\"button\" (click)=\"cancle()\">Cancle</button>\n    </div>\n</form>\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\n            No messages yet... Say hi by using the message box below\n        </div>\n\n        <ul #scrollMe\n            style=\"overflow: scroll; height: 500px;\"\n            [scrollTop] = \"scrollMe.scrollHeight\"\n            *ngIf=\"(messageService.messageThread$ | async)!.length > 0\" \n            class=\"chat\">\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\n                <div>\n                    <span class=\"chat-img float-right\">\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\"\n                            alt=\"{{message.senderUsername}}\">\n                    </span>\n                    <div class=\"chat-body\">\n                        <div class=\"header\">\n                            <small class=\"text-muted\">\n                                <span class=\"fa fa-clock-o\">{{message.messageSent |timeago}}</span>\n                                <span class=\"text-danger\"\n                                    *ngIf=\"!message.dateRead && message.senderUsername !== username\">\n                                    (unread)\n                                </span>\n                                <span class=\"text-success\"\n                                    *ngIf=\"message.dateRead && message.senderUsername !== username\">\n                                    (read {{message.dateRead | timeago}})\n                                </span>\n                            </small>\n                        </div>\n                        <p>{{message.content}}</p>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n\n    <div class=\"card-footer\">\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\n            <div class=\"input-group\">\n                <input name=\"messageContent\" required [(ngModel)]=\"messageContent\" type=\"text\" class=\"form-control input-sm\"\n                    placeholder=\"Send a private message\">\n                <div class=\"input-group-append\">\n                    <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\" type=\"submit\">Send</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Message } from 'src/app/_models/message';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { MessageService } from 'src/app/_services/message.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n @ViewChild('messageForm') messageForm!: NgForm;\n @Input() username!: string;\n @Input() messages!: Message[];\n messageContent!: string;\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit(): void {\n  }\n\n  sendMessage(){\n    this.messageService.sendMessage(this.username, this.messageContent).then(() =>{\n      this.messageForm.reset();\n    })\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>photo-management works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1>Not found 404 Error</h1>\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Return to Home page...</button>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { ReplaySubject } from 'rxjs';\nimport { User } from '../_models/user';\nimport { environment } from 'src/environments/environment';\nimport { PresenceService } from './presence.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private presence: PresenceService) { }\n\n  login(model: any){\n    return this.http.post<User>(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if(user){\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\n  register(model: any){\n    return this.http.post<User>(this.baseUrl + 'account/register', model).pipe(\n      map((user: User) => {\n        if(user){\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\n  setCurrentUser(user: User){\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout(){\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null!);\n    this.presence.stopHubConnetion();\n  }\n\n  //get decodedToken ->\n  getDecodedToken(token: string){\n    //atob -> allow us to decode what is in token \n    //token is in 3 part: 0header, 1pillow, 2signature\n    return JSON.parse(atob(token.split(\".\")[1] ||'{}'));\n  }\n}\n","<h4>Internal server error - refreshing the page will make the error disappear!</h4>\n\n<ng-container *ngIf=\"error\">\n    <h5 class=\"text-danger\">Error: {{error.message}}</h5>\n    <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\n    <p>What to do next?</p>\n    <ol>\n        <li>Open the chrome dev tools</li>\n        <li>Inspect the network tab</li>\n        <li>Check the failing request</li>\n        <li>Examine the request URL - make sure it is correct</li>\n        <li>Reproduce the error in Postman - if we see the same response, then the issue is not with Angular</li>\n    </ol>\n\n    <p>Following is the stack trace - this is where your investigation should start!</p>\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">\n        {{error.detail}}\n    </code>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n\n  error:any;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinerService: NgxSpinnerService) { }\n\n  busy(){\n    this.busyRequestCount++;\n    this.spinerService.show(undefined, {\n      type: 'line-scale-party',\n      bdColor: 'rgba(255,255,255,0)',\n      color: '#333333'\n    });\n  }\n\n  idle(){\n    this.busyRequestCount--;\n    if (this.busyRequestCount <=0){\n      this.busyRequestCount = 0;\n      this.spinerService.hide();\n    }\n  }\n}\n","<div class=\"container mt-5\">\n    <div *ngIf=\"!registerMode\" style=\"text-align: center;\">\n        <h1>Find your match</h1>\n        <p class=\"lead\">Come on in to view your matches.. all you need to do is sign up!</p>\n        <div class=\"text-center\">\n            <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-large mr-2\">Register</button>\n            <button class=\"btn btn-info btn-large\">Learn more</button>\n        </div>\n    </div>\n\n    <div *ngIf=\"registerMode\" class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-4\">\n                <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n            </div>\n        </div>\n    </div>\n\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  registerToggle(){\n    this.registerMode = !this.registerMode;\n  }\n\n\n  cancelRegisterMode(event: boolean){\n    this.registerMode = event;\n  }\n}\n","export interface Pagination{\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages:number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    //list of memebers are gona be stored in result\r\n    result!: T | null;\r\n    //pagination information are stored in pagination\r\n    pagination!: Pagination;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',\n  hubUrl: 'https://localhost:5001/hubs/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser: User | undefined;\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\n\n    if(currentUser){\n      request = request.clone({\n        setHeaders:{\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      })\n    }\n\n    return next.handle(request);\n  }\n}\n","<div class=\"row mb-4\">\n    <div class=\"btn-group\" name='container'>\n        <button class=\"btn btn-primary\" btnRadio='Unread' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope\"></i> Unread\n        </button>\n        <button class=\"btn btn-primary\" btnRadio='Inbox' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope-open\"></i> Inobx\n        </button>\n        <button class=\"btn btn-primary\" btnRadio='Outbox' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n            <i class=\"fa fa-paper-plane\"></i> Outbox\n        </button>\n    </div>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\n    <h3>No messages</h3>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer;\">\n        <tr>\n            <th style=\"width: 40%;\">Message</th>\n            <th style=\"width: 20%;\">From / To</th>\n            <th style=\"width: 20%;\">Sent / Received</th>\n            <th style=\"width: 20%;\"></th>\n        </tr>\n        <tr [hidden]=\"loading\" *ngFor=\"let message of messages\" routerLink='{{container === \"Outbox\" \n        ? \"/members/\" + message.recepientUsername\n        : \"/members/\" + message.senderUsername}}' [queryParams] = '{tab:3}'>\n            <td>{{message.content}}</td>\n            <td>\n                <div *ngIf=\"container === 'Outbox'\">\n                    <img class=\"img-circle rounded-circle mr-2\"\n                        src=\"{{message.recipientPhotoUrl || './assets/user.png'}}\" \n                        alt=\"{{message.recepientUsername}}\">\n                    <strong>{{message.recepientUsername|titlecase}}</strong>\n                </div>\n                <div *ngIf=\"container !== 'Outbox'\">\n                    <img class=\"img-circle rounded-circle mr-2\" \n                        src=\"{{message.senderPhotoUrl || './assets/user.png'}}\"\n                        alt=\"{{message.senderUsername}}\">\n                    <strong>{{message.senderUsername |titlecase}}</strong>\n                </div>\n            </td>\n            <td>{{message.messageSent | timeago}}</td>\n            <td>\n                <!-- dont route when deleting message (click)=\"$event.stopPropagation()\"  -->\n                <button \n                    (click)=\"$event.stopPropagation()\" \n                    (click)=\"deleteMessage(message.id)\" \n                    class=\"btn btn-danger\">Delete</button>\n            </td>\n        </tr>\n    </table>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\"\n        nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination } from '../_models/pagination';\nimport { ConfirmService } from '../_services/confirm.service';\nimport { MessageService } from '../_services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages!: Message[] | null;\n  pagination!: Pagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n\n  constructor(private messageService: MessageService, private confirmService: ConfirmService) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loading = true;\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe(response => {\n      this.messages = response.result;\n      this.pagination = response.pagination;\n      this.loading = false;\n    })\n  }\n\n  deleteMessage(id: number) {\n    this.confirmService.confirm('Confirm delete message', 'This cannot be undone')\n      .subscribe(result => {\n        if (result) {\n          this.messageService.deleteMessage(id).subscribe(() => {\n            // 1 is for how many messages we want to delete\n            this.messages?.splice(this.messages.findIndex(m => m.id === id), 1);\n          })\n        }\n      })\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { NgxGalleryModule} from '@kolkov/ngx-gallery'\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error =>{\n        if(error){\n          switch (error.status) {\n            case 400:\n              if (error.error.errors){\n                const modalStateErrors = [];\n                for(const key in error.error.errors){\n                  if(error.error.errors[key]){\n                    modalStateErrors.push(error.error.errors[key]);\n                  }\n                }\n                throw modalStateErrors.flat();\n              }else if (typeof(error.error) === 'object'){\n                this.toastr.error(error.statusText, error.status);\n              }else{\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');  \n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { of } from 'rxjs';\nimport { Observable, of as observableOf  } from 'rxjs';\n\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService){}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      //what roles the uer is in\n      map(user => {\n        if(user.roles.includes('Admin') || user.roles.includes('Moderator')){\n          return true;\n        }\n        this.toastr.error('You cannot enter this area');\n        return false;\n      })\n    )\n  }\n  \n}\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]' //*appHasRole\n})\nexport class HasRoleDirective implements OnInit{\n  //acces to parameters for pass string into selector appHasRole = '[\"Admin\"]'\n  @Input() appHasRole!: string[];\n  user!: User;\n\n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>,\n      private accountService: AccountService) {\n        //acces to currentUser and get him\n        this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n          this.user = user;\n        })\n       }\n\n  ngOnInit(): void {\n    //clear view if no roles\n    if(!this.user?.roles || this.user == null){\n      this.viewContainerRef.clear();\n      return;\n    }\n\n    //callback function on each element inside roles, returns true\n    if(this.user?.roles.some(r => this.appHasRole.includes(r))){\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    }else{\n      this.viewContainerRef.clear();\n    }\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUsersWithRoles(){\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\n  }\n\n  updateUserRoles(username: string, roles: string[]){\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' +roles, {});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  users!: Partial<User[]>;\n  bsModalRef!: BsModalRef;\n\n  constructor(private adminService: AdminService, private modalService: BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles() {\n    this.adminService.getUsersWithRoles().subscribe(users => {\n      this.users = users;\n    })\n  }\n\n  openRolesModal(user: User |undefined) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user)\n      }\n    }\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values: any[]) => {\n      const rolesToUpdate = {\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)]\n      };\n      if(rolesToUpdate){\n        this.adminService.updateUserRoles(user!.username, rolesToUpdate.roles).subscribe(() => {\n          user!.roles = [...rolesToUpdate.roles]\n        })\n      }\n    })\n  }\n\n  private getRolesArray(user: { roles: any ; } | undefined) {\n    const roles: any[] | undefined = [];\n    const userRoles = user?.roles;\n    const availableRoles: any[] = [\n      { name: 'Admin', value: 'Admin' },\n      { name: 'Moderator', value: 'Moderator' },\n      { name: 'Member', value: 'Member' }\n    ];\n\n    availableRoles.forEach(role => {\n      let isMatch = false;\n      for (const userRole of userRoles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n      if (!isMatch){\n        role.checked = false;\n        roles.push(role);\n      }\n    })\n    return roles;\n  }\n\n}","<div class=\"row\">\n    <table class=\"table\">\n        <tr>\n            <th style=\"width: 30%;\">Username</th>\n            <th style=\"width: 40%;\">Active roles</th>\n            <th style=\"width: 30%;\"></th>\n        </tr>\n        <tr *ngFor=\"let user of users\">\n            <td>{{user?.username}}</td>\n            <td>{{user?.roles}}</td>\n            <td><button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">Edit roles</button></td>\n        </tr>\n    </table>\n</div>","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryImageSize, NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Message } from 'src/app/_models/message';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  @ViewChild('memberTabs', { static: true }) memberTabs!: TabsetComponent;\n  member!: Member;\n  galleryOptions: NgxGalleryOptions[] = [];\n  galleryImages: NgxGalleryImage[] = [];\n  activeTab!: TabDirective;\n  messages: Message[] = [];\n  user!: User;\n\n  constructor(public presence: PresenceService, private route: ActivatedRoute,\n    private messageService: MessageService, private accountService: AccountService,\n    private router: Router) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n    this.router.routeReuseStrategy.shouldReuseRoute = () =>  false;\n  }\n\n\n  ngOnInit(): void {\n    //get member from our route\n    this.route.data.subscribe(data => {\n      this.member = data.member;\n    })\n\n    this.route.queryParams.subscribe(params => {\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n    })\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ]\n\n    this.galleryImages = this.getImages();\n\n  }\n\n  getImages(): NgxGalleryImage[] {\n    const imageUrls = [];\n    for (const photo of this.member.photos) {\n      imageUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        big: photo?.url\n      })\n    }\n    return imageUrls;\n  }\n\n  loadMessages() {\n    this.messageService.getMessageThread(this.member.username).subscribe(messages => {\n      this.messages = messages;\n    })\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  onTabActivated(data: TabDirective) {\n    this.activeTab = data;\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0) {\n      this.messageService.createHubConnection(this.user, this.member.username);\n    } else {\n      this.messageService.stopHubConnection();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.messageService.stopHubConnection();\n  }\n}\n","<div class=\"row\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\"\r\n                class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div class=\"mb-2\" *ngIf=\"(presence.onlineUsers$ | async)?.includes(member.username)\">\r\n                    <i class=\"fa fa-user-circle text-success\"></i> Online now\r\n                </div>\r\n                <div>\r\n                    <strong>Location: </strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age: </strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last active: </strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member since: </strong>\r\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"btn-group d-flex\">\r\n                    <button class=\"btn btn-primary\">Like</button>\r\n                    <button (click)=\"selectTab(3)\" class=\"btn btn-success\">Message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\" #memberTabs>\r\n            <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Description</h4>\r\n                <p>{{member.introduction}}</p>\r\n                <h4>Looking for</h4>\r\n                <p>{{member.lookingFor}}</p>\r\n            </tab>\r\n            <tab heading='Interests' (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Interests</h4>\r\n                <p>{{member.interests}}</p>\r\n            </tab>\r\n            <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">\r\n                <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"\r\n                    style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\r\n            </tab>\r\n            <tab heading='Messages' (selectTab)=\"onTabActivated($event)\">\r\n                <app-member-messages [username] = \"member.username\"></app-member-messages>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private accountService: AccountService, private toastr: ToastrService){}\n\n  canActivate(): Observable<boolean>{\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if (user) return true;\n        this.toastr.error('You shall not pass!');\n        return false;\n      })\n    )\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Group } from '../_models/group';\nimport { Message } from '../_models/message';\nimport { User } from '../_models/user';\nimport { getPaginatedResult, getPaginationHeader } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  baseUrl = environment.apiUrl;\n  hubUrl = environment.hubUrl;\n  private hubConnection!: HubConnection;\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\n  messageThread$ = this.messageThreadSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  createHubConnection(user: User, otherUsername: string) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect()\n      .build()\n\n    this.hubConnection.start().catch(error => console.log(error));\n\n    this.hubConnection.on('ReceiveMessageThread', messages => {\n      this.messageThreadSource.next(messages);\n    })\n\n    this.hubConnection.on('NewMessage', message => {\n      this.messageThread$.pipe(take(1)).subscribe(messages => {\n        this.messageThreadSource.next([...messages, message])\n      })\n    })\n\n    this.hubConnection.on('UpdatedGroup', (group: Group) =>{\n      if(group.connections.some(x => x.username === otherUsername)){\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\n          messages.forEach(message => {\n            if(!message.dateRead){\n              message.dateRead = new Date(Date.now())\n            }\n          })\n          this.messageThreadSource.next([...messages]);\n        })\n      }\n    })\n  }\n\n  stopHubConnection() {\n    if (this.hubConnection) {\n      this.hubConnection.stop();\n    }\n  }\n\n  //get messages\n  //bc. its paginated need pagination\n  getMessages(pageNumber: number, pageSize: number, container: string) {\n    let params = getPaginationHeader(pageNumber, pageSize);\n    params = params.append('Container', container);\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\n  }\n\n  getMessageThread(username: string) {\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\n  }\n\n  async sendMessage(username: string, content: string) {\n    return this.hubConnection.invoke('SendMessage', { recepientUsername: username, content })\n      .catch(error => console.log(error));\n  }\n\n  deleteMessage(id: number) {\n    return this.http.delete(this.baseUrl + 'messages/' + id);\n  }\n\n}\n","<div class=\"text-center mt-3\">\n    <h2>Your matches - {{pagination?.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <form #form=\"ngForm\" class=\"form-inline mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\n        <div class=\"form-group\">\n            <label>Age from: </label>\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"minAge\"\n                [(ngModel)]=\"userParams.minAge\">\n        </div>\n        <div class=\"form-group px-2\">\n            <label>Age to: </label>\n            <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"maxAge\"\n                [(ngModel)]=\"userParams.maxAge\">\n        </div>\n\n        <div class=\"form-group px-2\">\n            <label>Show: </label>\n            <select name=\"gender\" style=\"width: 130px;\" class=\"form-control ml-1\" [(ngModel)]=\"userParams.gender\">\n                <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n                    {{gender.display}}\n                </option>\n            </select>\n        </div>\n\n        <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\n        <button (click)=\"resetFilters()\" class=\"btn btn-info ml-1\" type=\"submit\">Reset Filters</button>\n\n        <div class=\"col\">\n            <div class=\"btn-group float-right\">\n                <button type=\"button\" class=\"btn btn-primary\" name='orderBy' (click)=\"loadMembers()\"\n                    btnRadio='lastActive' [(ngModel)]=\"userParams.orderBy\">\n                    Last Active\n                </button>\n\n                <button type=\"button\" class=\"btn btn-primary\" name='orderBy' (click)=\"loadMembers()\" btnRadio='created'\n                    [(ngModel)]=\"userParams.orderBy\">\n                    Newest Members\n                </button>\n            </div>\n        </div>\n\n    </form>\n</div>\n\n<div class=\"row\">\n    <div *ngFor=\"let member of members\" class=\"col-2\">\n        <app-member-card [member]=\"member\"></app-member-card>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\"\n        nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/user';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  members?: Member[];\n  pagination?: Pagination;\n  userParams!: UserParams;\n  user!: User;\n  //for dropdown list\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}]\n\n\n  constructor(private memberService: MembersService) {\n    this.userParams = this.memberService.getUserParams();\n   }\n\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n\n  loadMembers(){\n    //before we get member, setUserParams\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe(response =>{\n      //as response here we get paginatedResult\n      //stored in Member[]\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  resetFilters(){\n    this.userParams = this.memberService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any){\n    this.userParams.pageNumber = event.page;\n    //After we got pageNumber from the componenet\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'The Dating app';\n  users: any;\n\n  constructor(private accountService: AccountService, private presence: PresenceService) { }\n\n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser() {\n    const user: User = JSON.parse(localStorage.getItem('user') || '{}');\n\n    //check if we have user\n    if (user) {\n      this.accountService.setCurrentUser(user);\n      //when we got user, create hub connection and pass user to it (get access to user's jwt token)\n      this.presence.createHubConnection(user);\n    }\n\n  }\n\n\n}\n","<ngx-spinner>\r\n    <h3>Loading...</h3>\r\n</ngx-spinner>\r\n\r\n<app-nav></app-nav>\r\n\r\n<div class=\"container\" style=\"margin-top: 100px;\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../_services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyService: BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      //do smth when things have completed\n      finalize(() => {\n        this.busyService.idle();\n      })\n    )\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of, pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Member } from '../_models/member';\nimport { PaginatedResult } from '../_models/pagination';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { getPaginatedResult, getPaginationHeader } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members: Member[] = [];\n  //use object Map() to store value in key-value format\n  memberCache = new Map();\n  user!: User;\n  userParams!: UserParams;\n\n  constructor(private http: HttpClient, private accountService: AccountService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n    })\n  }\n\n  getUserParams(){\n    return this.userParams;\n  }\n\n  setUserParams(params: UserParams){\n    this.userParams = params;\n  }\n\n  resetUserParams(){\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n\n  //pass pagination parameter\n  getMembers(userParams: UserParams) {\n    //check if we have in our cache response for particular query\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\n    //if we have response for particular key, pass response\n    if (response) {\n      return of(response);\n    }\n\n    let params = getPaginationHeader(userParams.pageNumber, userParams.pageSize);\n\n    params = params.append('minAge', userParams.minAge.toString());\n    params = params.append('maxAge', userParams.maxAge.toString());\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n\n    //when get results back use map funciton and transform data\n    //idea- we go to our API and getMembers if we dont have it in cache, but if we have then in cache we will retriev this\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http)\n      .pipe(map(response => {\n        //.set(key, value)\n        this.memberCache.set(Object.values(userParams).join('-'), response);\n        return response;\n      }))\n\n  }\n\n  getMember(username: string) {\n    //finding individual member inside memberCache\n    //get all values from memberCache\n    //.reduce() reduce our array in to something else; \n    //want the result of each array in single array that we can search, and find first member that matches a condition\n    const member = [...this.memberCache.values()]\n      //what to do with each array \n      //we call this function on each element in the array, we're gona get the result which contains everything what's in cache (elem.result)\n      //and then we+re gona concat all that in the one arr->/array/ that we specify, which starts with nothing -> []\n      .reduce((arr, elem) => arr.concat(elem.result), [])\n      //look for first instance of member.username, and returns to us\n      .find((member: Member) => member.username === username);\n\n    //check if we already have member in previous queries, avoiding duplicate\n    if (member) {\n      return of(member);\n    }\n\n    //if we don't have a member we call him from API call\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\n  }\n\n  updateMember(member: Member) {\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        //get member from the service, find index of member\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      })\n    )\n  }\n\n  setMainPhoto(photoId: number) {\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\n  }\n\n  deletePhoto(photoId: number) {\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\n  }\n\n\n  addLike(username: string){\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\n  }\n\n  getLikes(predicate: string, pageNumber: number , pageSize: number ){\n    let params = getPaginationHeader(pageNumber, pageSize);\n    params = params.append('predicate', predicate);\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directive/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDropdownModule.forRoot(),\n    SharedModule,\n    NgxSpinnerModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Photo } from 'src/app/_models/photo';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { environment } from 'src/environments/environment';\n\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member!: Member;\n\n  uploader!: FileUploader;\n  hasBaseDropzoneOver = false;\n  baseUrl = environment.apiUrl;\n  user!: User;\n\n  constructor(private accountService: AccountService, private memberService: MembersService) {\n    //take user from observable\n    //this gives us access to curretUser\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n  \n  //for dropZone\n  fileOverBase(e: any) {\n    this.hasBaseDropzoneOver = e;\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.memberService.setMainPhoto(photo.id).subscribe(()=>{\n      this.user.photoUrl = photo.url;\n      //update currentUser$\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      //setting main photo\n      this.member.photos.forEach(p => {\n        if(p.isMain) p.isMain = false;\n        if(p.id === photo.id) p.isMain = true;\n      })\n    })\n  }\n\n  deletePhoto(photoId: number){\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n      this.member.photos = this.member.photos.filter(x => x.id !== photoId);\n    })\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      //bc not going via HTTP intreceptor, and we need add token inside here\n      //get user out of controller \n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n    \n    this.uploader.onAfterAddingFile = file => {\n      file.withCredentials = false;\n    }\n\n    //what we want to do when upload is successful\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if(response){\n        const photo: Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n         if(photo.isMain){\n           this.user.photoUrl = photo.url;\n           this.member.photoUrl = photo.url;\n           this.accountService.setCurrentUser(this.user);\n         }\n      }\n    }\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\n        <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\">\n        <div class=\"text-center\">\n            <button \n                [disabled]='photo.isMain'\n                (click) =\"setMainPhoto(photo)\"\n                [ngClass]='photo.isMain ? \"btn-success active\" : \"btn-outline-success\"'\n                class=\"btn btn-sm\">Main</button>\n            <button \n                [disabled]=\"photo.isMain\"\n                (click) = \"deletePhoto(photo.id)\"\n                class=\"btn btn-sm btn-danger\"><i class=\"fa fa-trash\"></i></button>\n        </div>\n    </div>\n</div>\n\n<div class=\"row mt-3\">\n\n    <div class=\"col-md-3\">\n\n        <h3>Add photos</h3>\n\n        <div ng2FileDrop [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\" (fileOver)=\"fileOverBase($event)\"\n            [uploader]=\"uploader\" class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n            <i class=\"fa fa-upload fa-3x\"></i>\n            Drop photos here\n        </div>\n\n        Multiple\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n\n        Single\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n    </div>\n\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n        <h3>Upload queue</h3>\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th width=\"50%\">Name</th>\n                    <th>Size</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of uploader.queue\">\n                    <td><strong>{{ item?.file?.name }}</strong></td>\n                    <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div>\n            <div>\n                Queue progress:\n                <div class=\"progress\" style=\"\">\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"uploader.uploadAll()\"\n                [disabled]=\"!uploader.getNotUploadedItems().length\">\n                <span class=\"fa fa-upload\"></span> Upload all\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-s\" (click)=\"uploader.cancelAll()\"\n                [disabled]=\"!uploader.isUploading\">\n                <span class=\"fa fa-ban\"></span> Cancel all\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-s\" (click)=\"uploader.clearQueue()\"\n                [disabled]=\"!uploader.queue.length\">\n                <span class=\"fa fa-trash\"></span> Remove all\n            </button>\n        </div>\n\n    </div>\n\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Member } from \"../_models/member\";\r\nimport { MembersService } from \"../_services/members.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class MemberDetailedResolver implements Resolve<Member>{\r\n\r\n    constructor(private memberService: MembersService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n        return this.memberService.getMember(route.paramMap.get('username') || '{}');\r\n    }\r\n    \r\n\r\n}","<div class=\"form-group\">\n    <input \n    [class.is-invalid] = \"ngControl.touched && ngControl.invalid\"\n        type={{type}} \n        class=\"form-control\" \n        [formControl]=\"$any(ngControl).control\"\n        placeholder={{label}}>\n\n        <div *ngIf=\"ngControl.control?.errors?.required\"\n            class=\"invalid-feedback\">Please enter a {{label}}</div>\n        <div *ngIf=\"ngControl.control?.errors?.minlength\"\n            class=\"invalid-feedback\">Please enter a {{label}} must be at least \n                {{ngControl.errors?.minlength['requiredLength']}}</div>\n        <div *ngIf=\"ngControl.control?.errors?.maxlength\"\n            class=\"invalid-feedback\">Please enter a {{label}} must be at most\n                {{ngControl.errors?.maxlength['requiredLength']}}</div>\n        <div *ngIf=\"ngControl.control?.errors?.isMatching\"\n            class=\"invalid-feedback\">Passwords do not match\n        </div>\n</div>","import { Component, Input, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label?: string;\n  @Input() type = 'text';\n  \n  constructor(@Self() public ngControl: NgControl) {\n    //access to or control inside component Register\n    this.ngControl.valueAccessor = this;\n   }\n\n  writeValue(obj: any): void {\n  }\n  registerOnChange(fn: any): void {\n  }\n  registerOnTouched(fn: any): void {\n  }\n\n}\n","<div class=\"text-center mt-3\">\n    <h2>{{predicate === 'liked' ? 'Member I liked': 'Members who like me'}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"btn-group\" name=\"predicate\">\n            <button class=\"btn btn-primary\" btnRadio=\"liked\" [(ngModel)]=\"predicate\" \n                (click)=\"loadLikes()\">Members I like</button>\n                <button class=\"btn btn-primary\" btnRadio=\"likedBy\" [(ngModel)]=\"predicate\" \n                (click)=\"loadLikes()\">Members who like me</button>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\">\n        <div class=\"col-2\" *ngFor=\"let member of members\">\n            <app-member-card [member] = \"member\"></app-member-card>\n        </div>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\"\n        nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n    </pagination>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  //to store our members\n  //partial means that each of properties inside of our members is gona be optional\n  //to store our members\n  //partial means that each of properties inside of our members is gona be optional\n  members!: Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize = 5;\n  pagination: Pagination | undefined;\n\n  constructor(private memberService: MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes(){\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response =>{\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  pageChanged(event: any){\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n\n    <div class=\"container\">\n      <a class=\"navbar-brand\" routerLink='/' routerLinkActive='active'>Dating App</a>\n\n        <ul class=\"navbar-nav mr-auto\">\n          <ng-container *ngIf=\"accountService.currentUser$ | async\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLink='/members' routerLinkActive='active'>Matches</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLink='/lists' routerLinkActive='active'>Lists</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLink='/messages' routerLinkActive='active'>Messages</a>\n            </li>\n            <li *appHasRole='[\"Admin\", \"Moderator\"]' class=\"nav-item\">\n              <a class=\"nav-link\" routerLink='/admin' routerLinkActive='active'>Admin</a>\n            </li>\n          </ng-container>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink='/errors' routerLinkActive='active'>Errors</a>\n          </li>\n        </ul>\n\n        <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\n          <img src=\"{{user.photoUrl || './assets/user.png'}}\" alt=\"{{user.username}}\">\n          <a class=\"dropdown-toggle text-light\" dropdownToggle>Welcome {{user.knownAs || user.username| titlecase}}</a>\n          <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n            <a class=\"dropdown-item\" routerLink='member/edit'>Edit Profile</a>\n            <div class=\"dropdown-divider\"></div>\n            <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n          </div>\n        </div>\n\n        <form *ngIf=\"(accountService.currentUser$ | async) === null\" #loginForm=\"ngForm\" class=\"form-inline mt-2 mt-md-0\" (ngSubmit)=\"login()\" autocomplete=\"off\">\n          <input \n            name=\"username\"\n            [(ngModel)]=\"model.username\"\n            class=\"form-control mr-sm-2\" \n            type=\"text\" \n            placeholder=\"Username\">\n          <input \n            name=\"password\"\n            [(ngModel)]=\"model.password\"\n            class=\"form-control mr-sm-2\" \n            type=\"password\" \n            placeholder=\"Password\">\n          <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n        </form>\n      </div>\n\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  model: any = {}\n\n  \n  constructor(public accountService: AccountService, private router: Router,\n    private toast: ToastrService) { }\n\n  ngOnInit(): void {\n    \n  }\n\n\n  login(){\n    this.accountService.login(this.model).subscribe(response=> {\n     this.router.navigateByUrl('/members');\n    })\n  }\n\n  logout(){\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  \n  @Input()\n  member!: Member ;\n  \n  constructor(private memberService: MembersService, private toastr: ToastrService,\n    public presence: PresenceService) { }\n\n  ngOnInit(): void {\n  }\n\n  addLike(member: Member){\n    this.memberService.addLike(member.username).subscribe(() => {\n      this.toastr.success('You have liked ' + member.knownAs);\n    })\n  }\n\n}\n","<div class=\"card mb-4\">\n    <div class=\"card-img-wrapper\">\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\n        <ul class=\"list-inline member-icons animate text-center\">\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-primary\" routerLink='/members/{{member.username}}'>\n                    <i class=\"fa fa-user\"></i>\n                </button>\n            </li>\n            <li class=\"list-inline-item\">\n                <button (click)=\"addLike(member)\" class=\"btn btn-primary\">\n                    <i class=\"fa fa-heart\"></i>\n                </button>\n            </li>\n            <li class=\"list-inline-item\">\n                <button routerLink='/members/{{member.username}}' [queryParams]='{tab:3}' class=\"btn btn-primary\">\n                    <i class=\"fa fa-envelope\"></i>\n                </button>\n            </li>\n        </ul>\n    </div>\n    <div class=\"card-body p-1\">\n        <h6 class=\"card-title text-center mb-1\">\n            <span [class.is-online]=\"(presence.onlineUsers$ | async)?.includes(member.username)\">\n                <i class=\"fa fa-user mr-2\"></i>\n            </span>\n\n            {{member.knownAs}}, {{member.age}}\n        </h6>\n        <p class=\"card-text text-muted text-center\">{{member.city}}</p>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection!: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) { }\n\n  createHubConnection(user: User) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token\n        //skipNegotiation: true\n      })\n      .withAutomaticReconnect()\n      .build()\n\n    this.hubConnection\n      .start()\n      .catch(error => console.log(error));\n\n    //listen to offline online methods, \n    //when this method is called 'UserIsOnline' and client are connected then display toast\n    this.hubConnection.on('UserIsOnline', username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames, username])\n      })\n    })\n\n    this.hubConnection.on('UserIsOffline', username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames.filter(x => x !== username)])\n      })\n    })\n\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    })\n\n    this.hubConnection.on('NewMessageReceived', ({username, knownAs}) => {\n      this.toastr.info(knownAs + ' has sent you a new message!')\n        .onTap\n        .pipe(take(1))\n        .subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=3'));\n    })\n  }\n\n  //to stop hub connection\n  stopHubConnetion() {\n    this.hubConnection.stop().catch(error => console.log(error));\n  }\n}\n","import { User } from \"./user\";\r\n\r\nexport class UserParams {\r\n    gender!: string;\r\n    minAge = 18;\r\n    maxAge = 99;\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    orderBy = 'lastActive';\r\n\r\n    constructor(user: User) {\r\n        this.gender = user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n}","<h2>Admin Panel</h2>\n<div class=\"tab-panel\">\n    <tabset class=\"member-tabset\">\n        <tab heading='User management' *appHasRole='[ \"Admin\" ]'>\n            <div class=\"container\">\n                <app-user-management></app-user-management>\n            </div>\n        </tab>\n        <tab heading='Photo management' *appHasRole='[ \"Admin\", \"Moderator\" ]'>\n            <div class=\"container\">\n                <app-photo-management></app-photo-management>\n            </div>\n        </tab>\n    </tabset>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm?: NgForm;\n  member!: Member;\n  user!: User;\n\n  @HostListener('window:beforeunload', ['event']) BeforeUnloadEvent($event: any){\n    if(this.editForm?.dirty){\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(private accountService: AccountService, private memberService: MembersService,\n    private toastr: ToastrService) {\n    //get from obesrvable\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember() {\n    this.memberService.getMember(this.user.username).subscribe(member => {\n      this.member = member;\n    })\n  }\n\n  updateMember() {\n    this.memberService.updateMember(this.member).subscribe(()=>{\n      this.toastr.success('Profile updated successfully.');\n      this.editForm?.reset(this.member);\n    })\n  }\n\n}\n","<div class=\"row\" *ngIf=\"member\">\r\n    <div class=\"col-4\">\r\n        <h1>Your profile</h1>\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\r\n            <strong>Information: </strong> You have made changes. Any unsaved chaneges will lost \r\n        </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\"\r\n                class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div>\r\n                    <strong>Location: </strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age: </strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last active: </strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member since: </strong>\r\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <button [disabled]=\"!editForm.dirty\" form=\"editForm\" type=\"submit\" class=\"btn btn-success btn-block\">Changes</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\">\r\n            <tab heading='About {{member.knownAs}}'>\r\n                <form id=\"editForm\" #editForm=\"ngForm\" (ngSubmit)=\"updateMember()\">\r\n                    <h4>Description</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Looking for</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Interests</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Location Details: </h4>\r\n                    <div class=\"form-inline\">\r\n                        <label for=\"city\">City: </label>\r\n                        <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\r\n                        <label for=\"city\">Country: </label>\r\n                        <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\r\n                    </div>\r\n                </form>\r\n\r\n            </tab>\r\n            <tab heading='Edit Photos'>\r\n                <app-photo-editor [member] = \"member\"></app-photo-editor>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>","//set members\r\n  //pass our paramteres in return method\r\n  //when we use HTTP get normally, it's give us response.body , but..->\r\n  //when we're observing the response, and use it to pass parameters that we created, \r\n\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { PaginatedResult } from \"../_models/pagination\";\r\n\r\n  //then we get the full response back, don't get body response so we need to do it ourselves\r\nexport function getPaginatedResult<T>(url: string, params: HttpParams, http: HttpClient) {\r\n    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>()!;\r\n    return http.get<T>(url, { observe: 'response', params }).pipe(\r\n      //use map, so we can hold the response\r\n      map(response => {\r\n        //our members array is gona contained inside reponse.body\r\n        paginatedResult.result = response.body;\r\n        //check pagination headers that not equal null\r\n        if (response.headers.get('Pagination') !== null) {\r\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination') || '{}');\r\n        }\r\n        return paginatedResult ;\r\n      })\r\n    );\r\n  }\r\n\r\n  //get pagination headers function\r\nexport function getPaginationHeader(pageNumber: number, pageSize: number) {\r\n    //this gives us to serialize up parameters\r\n    let params = new HttpParams();\r\n\r\n    //query string; so page needs to be toString()\r\n    params = params.append('pageNumber', pageNumber!.toString());\r\n    params = params.append('pageSize', pageSize!.toString());\r\n\r\n    return params;\r\n  }","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n\n  constructor(private confirmService: ConfirmService){}\n\n  canDeactivate(component: MemberEditComponent):  Observable<boolean> | boolean {\n    if(component.editForm?.dirty){\n      return this.confirmService.confirm()\n    }\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title!: string;\n  message!: string;\n  btnOkText!: string;\n  btnCancleText!: string;\n  result!: boolean;\n\n  constructor(public bsModelRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm(){\n    this.result = true;\n    this.bsModelRef.hide();\n  }\n\n  decline(){\n    this.result = false;\n    this.bsModelRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\n  </div>\n  <div class=\"modal-body\">\n      <p>{{message}}</p>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOkText}}</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancleText}}</button>\n  </div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AdminGuard } from './_guards/admin.guard';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {\n    path:'', \n    runGuardsAndResolvers: 'always', \n    canActivate: [AuthGuard],\n    children:[\n      {path: 'members', component: MemberListComponent},\n      {path: 'members/:username', component:MemberDetailComponent, resolve: {member: MemberDetailedResolver}},\n      {path: 'member/edit', component:MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard]},\n      {path: 'lists', component:ListsComponent},\n      {path: 'messages', component: MessagesComponent},\n      {path: 'admin', component:AdminPanelComponent, canActivate: [AdminGuard]}\n    ]\n  },\n  {path: 'errors', component: TestErrorsComponent},\n  {path: 'not-found', component: NotFoundComponent},\n  {path: 'server-error', component: ServerErrorComponent}, \n  {path: '**', component:NotFoundComponent, pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\n  bsModelRef!: BsModalRef ;\n\n  constructor(private modalService: BsModalService) { }\n\n  confirm(title = 'Confirmation',\n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok',\n    btnCancleText = 'Cancle'): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancleText\n      }\n    }\n    this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\n\n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer: { next: (arg0: any) => void; }) => {\n      const subscription = this.bsModelRef?.onHidden.subscribe(() => {\n        observer.next(this.bsModelRef?.content.result);\n      });\n\n      return {\n        unsubscribe() {\n          subscription?.unsubscribe();\n        }\n      }\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user!: User;\n  roles!: any[];\n  \n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  updateRoles(){\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form #rolesForm =\"ngForm\" id=\"rolesForm\">\n        <div class=\"form-check\" *ngFor=\"let role of roles\">\n            <input type=\"checkbox\"\n                class=\"form-check-input\"\n                [checked]=\"role.checked\"\n                value=\"role.name\"\n                (change)=\"role.checked = !role.checked\"\n                [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"    \n            >\n            <label>{{role.name}}</label>\n        </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancle</button>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\n  </div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}